<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO에서 어떻게 이 mapper를 부를 것인지 namespace 정해줌 -->

<!-- id와 name의 데이터가나옴 -->
<mapper namespace="Member">
	<!-- id는 쿼리문을 무엇으로 보낼 것인지 resultType은 결과물이 무엇인지 -->
	<select id="login" resultType="kr.co.metanet.dto.MemberDTO">
		select
		*
		from
		tb_Employee a, tb_account_normal b, tb_organization c
		where b.id =
		#{id}
		and b.password = #{password}
		and certified_yn = 'Y'
		and a.emp_code = b.emp_code
		and a.org_code = c.org_code
	</select>

	<!-- 회원가입 -->
	<insert id="signup" parameterType="kr.co.metanet.dto.MemberDTO">
		<selectKey keyProperty="bno" resultType="int" order="BEFORE">
			SELECT
			no_seq.nextval From DUAL
		</selectKey>

		insert into myMember (bno, id,
		password, name, join_date, gender,
		emp_code, phone,
		org_code, emp_rank)
		values (#{bno}, #{id},
		#{password}, #{name},
		#{join_date}, #{gender}, #{emp_code},
		#{phone}, #{org_code},
		#{emp_rank})

	</insert>

	<!-- 회원가입 이메일 인증 -->
	<update id="createAuthKey">
		update myMember set verify = #{authKey} where id
		= #{id}
	</update>

	<update id="userAuth">
		update myMember set verify = 1 where id =
		#{id}
	</update>

	<!-- 아이디 체크(유효성검사) -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(*) from myMember where id = #{id}
	</select>

	<!-- 유저 목록 불러오기, 전체 , 검색기능 -->
	<select id="getMemberList"
		resultType="kr.co.metanet.dto.MemberDTO">
		select
		*
		from
		myMember
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if
				test="searchType=='id' and keyword != null and keyword != '' ">
				AND id like '%' || #{keyword} || '%'
			</if>
			<if
				test="searchType=='emp_code' and keyword != null and keyword != '' ">
				AND emp_code like '%' || #{keyword} || '%'
			</if>
			<if
				test="searchType=='name' and keyword != null and keyword != '' ">
				AND name like '%' || #{keyword} || '%'
			</if>
		</trim>
	</select>


	<!-- DETAIL버튼 클릭하여 유저 업데이트 -->
	<update id="updateMember"
		parameterType="kr.co.metanet.dto.MemberDTO"> UPDATE myMember SET id = #{id} , password =
		#{password} , name = #{name}, join_date = #{join_date}, gender =
		#{gender}, phone = #{phone}, org_code = #{org_code},
		emp_rank = #{emp_rank} WHERE emp_code = #{emp_code}
	</update>

	<!-- DETAIL버튼 클릭하여 유저 삭제 -->
	<delete id="deleteMember" parameterType="String"> DELETE FROM myMember
		WHERE emp_code = #{emp_code}
	</delete>

</mapper>

